version: "3"
services:
  app:
    build:
      dockerfile: Dockerfile
    container_name: order-service-app
    image: "order-service-image:0.1"
    depends_on:
      - db
      - broker
    restart: always
    ports:
      - "7000:7001"
    environment:
      - server.port=7001
      - spring.datasource.url=jdbc:mysql://db:3306/order_service?allowPublicKeyRetrieval=True&createDatabaseIfNotExist=true&useSSL=false&autoReconnect=true&connectTimeout=1000
      - spring.datasource.username=root
      - spring.datasource.password=mypassword
      - spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
      - spring.jpa.defer-datasource-initialization=true
      - spring.jpa.hibernate.ddl-auto=none
      - spring.sql.init.mode=always
      - spring.main.allow-bean-definition-overriding=true
      - graphql.servlet.corsEnabled=true
      - graphql.servlet.mapping=/graphql
      - graphql.servlet.enabled=true
      - spring.graphql.graphiql.enabled=true
      - spring.jpa.generate-ddl=true
      - spring.kafka.producer.bootstrap-servers=broker:9092
      - spring.kafka.producer.topic=customer-order-topic
  db:
    image: mysql:latest
    container_name: db-mysql-order-service
    ports:
      - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=mypassword
#      - MYSQL_DATABASE=order_service

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic customer-order-topic --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "