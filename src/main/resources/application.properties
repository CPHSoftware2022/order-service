server.port=7001
spring.main.allow-bean-definition-overriding=true

#mysql properties
spring.jpa.generate-ddl=true
# docker default gateway ip
#spring.datasource.url=jdbc:mysql://172.17.0.1:3306/order_service?allowPublicKeyRetrieval=True&createDatabaseIfNotExist=true&useSSL=false
spring.datasource.url=jdbc:mysql://localhost:3306/order_service?allowPublicKeyRetrieval=True&createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.url=jdbc:mysql://localhost:3306/order_service?allowPublicKeyRetrieval=True&createDatabaseIfNotExist=true&useSSL=false

spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always
spring.datasource.initialization-mode=always

#graphql properties
spring.graphql.graphiql.enabled=true
graphql.servlet.corsEnabled=true
graphql.servlet.mapping=/graphql
graphql.servlet.enabled=true

#Kafka
#spring.kafka.producer.bootstrap-servers= localhost:9092
#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.topic=customer-order-topic